services: 
  config-server: 
    image: lyvanna544/breakdown/config-server:latest
    build: 
      context: config-server
    container_name: config-server-cont
    environment: 
      - SERVER_PORT=8888
     # - SPRING_PROFILES_ACTIVE=default 
    networks: 
      - breakdown_network
    depends_on: 
      - vault
    ports: 
      - "8888:8888"
  api-gateway: 
    image: lyvanna544/breakdown/api-gateway:latest
    build: 
      context: api-gateway
    container_name: api-gateway-cont 
    pull_policy: build 
    environment: 
      - SERVER_PORT=8080
      - SPRING_PROFILES_ACTIVE=prod
    restart: always
    ports:
      - "8080:8080"
    depends_on: 
      - eureka-service 
    networks: 
      - breakdown_network
  user-service: 
    image: lyvanna544/breakdown/user-service:latest
    build: 
      context: user-service 
    container_name:  user-service-cont 
    environment: 
      - SERVER_PORT=8080
    #  - SPRING_PROFILES_ACTIVE=default
    ports:
      - "8081:8080"
    depends_on: 
      - eureka-service 
      # original value was eureka-service
    networks: 
      - breakdown_network
  product-service: 
    image: lyvanna544/breakdown/product-service:latest
    build: 
      context: product-service 
    #container_name:  product-service-cont 
    environment: 
      - SERVER_PORT=8080
      - SPRING_PROFILES_ACTIVE=default
    # deploy:
    #   replicas: 2 
    # ports:
    #   - "8082:8080"
    pull_policy: build
    depends_on: 
      - eureka-service
    networks: 
      - breakdown_network
  product-db: 
    image: postgres
    container_name: product-db
    environment:
      - POSTGRES_DB=ecommerce_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password@2025
    networks:
      - breakdown_network
  eureka-service: 
    image: lyvanna544/breakdown/eureka-server:latest
    build: 
      context: eureka-server
    container_name:  eureka-server
    environment: 
      - SERVER_PORT=8761
      - SPRING_PROFILES_ACTIVE=prod
    ports:
      - "8761:8761"
    restart: on-failure
    depends_on: 
      - config-server
    networks: 
      - breakdown_network
  

# configuration for the vault 
# We will lose data due to the dev mode, 
  vault: 
    image: hashicorp/vault:latest 
    container_name: vault 
    ports: 
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: myroot 
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8200"
    # without it when RAM , then  -> swap FILE on disk ( secrets exposed )
    # 
    cap_add:
      - IPC_LOCK 
    command: server -dev -dev-root-token-id=myroot
    volumes:
      - vault-data:/vault/data
      - vault-log:/vault/logs
    networks: 
      - breakdown_network
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092" # for client connections 
    environment:
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      #KAFKA_KRAFT_CLUSTER_ID: kraft-cluster-id-123
      ALLOW_PLAINTEXT_LISTENER: "yes"
    networks: 
      - breakdown_network
  kafka-ui: 
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8082:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    depends_on: 
      - kafka
    networks:
      - breakdown_network
# for the distributed tracing 
  zipkin: 
    image: openzipkin/zipkin:latest
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - breakdown_network

  redis: 
    image: redis 
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - breakdown_network
volumes:
  vault-data: 
  vault-log: 
networks:
  breakdown_network: 
